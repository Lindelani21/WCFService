//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AG_webD2.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AG_webD2.ServiceReference1.Application[] ApplicationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AG_webD2.ServiceReference1.Document[] DocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AG_webD2.ServiceReference1.Application[] Applications {
            get {
                return this.ApplicationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationsField, value) != true)) {
                    this.ApplicationsField = value;
                    this.RaisePropertyChanged("Applications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AG_webD2.ServiceReference1.Document[] Documents {
            get {
                return this.DocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentsField, value) != true)) {
                    this.DocumentsField = value;
                    this.RaisePropertyChanged("Documents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentNum {
            get {
                return this.StudentNumField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentNumField, value) != true)) {
                    this.StudentNumField = value;
                    this.RaisePropertyChanged("StudentNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Application", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Application : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranscriptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AG_webD2.ServiceReference1.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Module {
            get {
                return this.ModuleField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleField, value) != true)) {
                    this.ModuleField = value;
                    this.RaisePropertyChanged("Module");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Transcript {
            get {
                return this.TranscriptField;
            }
            set {
                if ((object.ReferenceEquals(this.TranscriptField, value) != true)) {
                    this.TranscriptField = value;
                    this.RaisePropertyChanged("Transcript");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AG_webD2.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AG_webD2.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AG_webD2.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        AG_webD2.ServiceReference1.User Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        System.Threading.Tasks.Task<AG_webD2.ServiceReference1.User> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUser", ReplyAction="http://tempuri.org/IService/GetUserResponse")]
        AG_webD2.ServiceReference1.User GetUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUser", ReplyAction="http://tempuri.org/IService/GetUserResponse")]
        System.Threading.Tasks.Task<AG_webD2.ServiceReference1.User> GetUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateDocument", ReplyAction="http://tempuri.org/IService/CreateDocumentResponse")]
        bool CreateDocument(int userId, string type, string path, System.DateTime timeStamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateDocument", ReplyAction="http://tempuri.org/IService/CreateDocumentResponse")]
        System.Threading.Tasks.Task<bool> CreateDocumentAsync(int userId, string type, string path, System.DateTime timeStamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentByUser", ReplyAction="http://tempuri.org/IService/GetDocumentByUserResponse")]
        AG_webD2.ServiceReference1.Document GetDocumentByUser(int userId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentByUser", ReplyAction="http://tempuri.org/IService/GetDocumentByUserResponse")]
        System.Threading.Tasks.Task<AG_webD2.ServiceReference1.Document> GetDocumentByUserAsync(int userId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Registeration", ReplyAction="http://tempuri.org/IService/RegisterationResponse")]
        AG_webD2.ServiceReference1.User Registeration(string studentNum, string name, string surname, string email, string password, string userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Registeration", ReplyAction="http://tempuri.org/IService/RegisterationResponse")]
        System.Threading.Tasks.Task<AG_webD2.ServiceReference1.User> RegisterationAsync(string studentNum, string name, string surname, string email, string password, string userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateUser", ReplyAction="http://tempuri.org/IService/updateUserResponse")]
        AG_webD2.ServiceReference1.User updateUser(string studentNum, string name, string surname, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateUser", ReplyAction="http://tempuri.org/IService/updateUserResponse")]
        System.Threading.Tasks.Task<AG_webD2.ServiceReference1.User> updateUserAsync(string studentNum, string name, string surname, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateUserRole", ReplyAction="http://tempuri.org/IService/updateUserRoleResponse")]
        bool updateUserRole(int userID, string userRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateUserRole", ReplyAction="http://tempuri.org/IService/updateUserRoleResponse")]
        System.Threading.Tasks.Task<bool> updateUserRoleAsync(int userID, string userRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/deleteUser", ReplyAction="http://tempuri.org/IService/deleteUserResponse")]
        bool deleteUser(string studentNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/deleteUser", ReplyAction="http://tempuri.org/IService/deleteUserResponse")]
        System.Threading.Tasks.Task<bool> deleteUserAsync(string studentNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/apply", ReplyAction="http://tempuri.org/IService/applyResponse")]
        AG_webD2.ServiceReference1.Application apply(string role, string module, string transcript, int Id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/apply", ReplyAction="http://tempuri.org/IService/applyResponse")]
        System.Threading.Tasks.Task<AG_webD2.ServiceReference1.Application> applyAsync(string role, string module, string transcript, int Id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetApplication", ReplyAction="http://tempuri.org/IService/GetApplicationResponse")]
        AG_webD2.ServiceReference1.Application GetApplication(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetApplication", ReplyAction="http://tempuri.org/IService/GetApplicationResponse")]
        System.Threading.Tasks.Task<AG_webD2.ServiceReference1.Application> GetApplicationAsync(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetApplications", ReplyAction="http://tempuri.org/IService/GetApplicationsResponse")]
        AG_webD2.ServiceReference1.Application[] GetApplications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetApplications", ReplyAction="http://tempuri.org/IService/GetApplicationsResponse")]
        System.Threading.Tasks.Task<AG_webD2.ServiceReference1.Application[]> GetApplicationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplication", ReplyAction="http://tempuri.org/IService/UpdateApplicationResponse")]
        bool UpdateApplication(AG_webD2.ServiceReference1.Application application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplication", ReplyAction="http://tempuri.org/IService/UpdateApplicationResponse")]
        System.Threading.Tasks.Task<bool> UpdateApplicationAsync(AG_webD2.ServiceReference1.Application application);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : AG_webD2.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<AG_webD2.ServiceReference1.IService>, AG_webD2.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AG_webD2.ServiceReference1.User Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<AG_webD2.ServiceReference1.User> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public AG_webD2.ServiceReference1.User GetUser(int userID) {
            return base.Channel.GetUser(userID);
        }
        
        public System.Threading.Tasks.Task<AG_webD2.ServiceReference1.User> GetUserAsync(int userID) {
            return base.Channel.GetUserAsync(userID);
        }
        
        public bool CreateDocument(int userId, string type, string path, System.DateTime timeStamp) {
            return base.Channel.CreateDocument(userId, type, path, timeStamp);
        }
        
        public System.Threading.Tasks.Task<bool> CreateDocumentAsync(int userId, string type, string path, System.DateTime timeStamp) {
            return base.Channel.CreateDocumentAsync(userId, type, path, timeStamp);
        }
        
        public AG_webD2.ServiceReference1.Document GetDocumentByUser(int userId, string type) {
            return base.Channel.GetDocumentByUser(userId, type);
        }
        
        public System.Threading.Tasks.Task<AG_webD2.ServiceReference1.Document> GetDocumentByUserAsync(int userId, string type) {
            return base.Channel.GetDocumentByUserAsync(userId, type);
        }
        
        public AG_webD2.ServiceReference1.User Registeration(string studentNum, string name, string surname, string email, string password, string userType) {
            return base.Channel.Registeration(studentNum, name, surname, email, password, userType);
        }
        
        public System.Threading.Tasks.Task<AG_webD2.ServiceReference1.User> RegisterationAsync(string studentNum, string name, string surname, string email, string password, string userType) {
            return base.Channel.RegisterationAsync(studentNum, name, surname, email, password, userType);
        }
        
        public AG_webD2.ServiceReference1.User updateUser(string studentNum, string name, string surname, string username, string password) {
            return base.Channel.updateUser(studentNum, name, surname, username, password);
        }
        
        public System.Threading.Tasks.Task<AG_webD2.ServiceReference1.User> updateUserAsync(string studentNum, string name, string surname, string username, string password) {
            return base.Channel.updateUserAsync(studentNum, name, surname, username, password);
        }
        
        public bool updateUserRole(int userID, string userRole) {
            return base.Channel.updateUserRole(userID, userRole);
        }
        
        public System.Threading.Tasks.Task<bool> updateUserRoleAsync(int userID, string userRole) {
            return base.Channel.updateUserRoleAsync(userID, userRole);
        }
        
        public bool deleteUser(string studentNum) {
            return base.Channel.deleteUser(studentNum);
        }
        
        public System.Threading.Tasks.Task<bool> deleteUserAsync(string studentNum) {
            return base.Channel.deleteUserAsync(studentNum);
        }
        
        public AG_webD2.ServiceReference1.Application apply(string role, string module, string transcript, int Id, string status) {
            return base.Channel.apply(role, module, transcript, Id, status);
        }
        
        public System.Threading.Tasks.Task<AG_webD2.ServiceReference1.Application> applyAsync(string role, string module, string transcript, int Id, string status) {
            return base.Channel.applyAsync(role, module, transcript, Id, status);
        }
        
        public AG_webD2.ServiceReference1.Application GetApplication(int studentId) {
            return base.Channel.GetApplication(studentId);
        }
        
        public System.Threading.Tasks.Task<AG_webD2.ServiceReference1.Application> GetApplicationAsync(int studentId) {
            return base.Channel.GetApplicationAsync(studentId);
        }
        
        public AG_webD2.ServiceReference1.Application[] GetApplications() {
            return base.Channel.GetApplications();
        }
        
        public System.Threading.Tasks.Task<AG_webD2.ServiceReference1.Application[]> GetApplicationsAsync() {
            return base.Channel.GetApplicationsAsync();
        }
        
        public bool UpdateApplication(AG_webD2.ServiceReference1.Application application) {
            return base.Channel.UpdateApplication(application);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateApplicationAsync(AG_webD2.ServiceReference1.Application application) {
            return base.Channel.UpdateApplicationAsync(application);
        }
    }
}
